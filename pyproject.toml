[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/wtforms_html5"]

[project]
name = "wtforms-html5"
description = "Generates render keywords for widgets of WTForms HTML5 fields."
readme = "README.md"
license = "GPL-3.0-or-later"
authors = [
  {name = "Brutus", email = "brutus.dmc@googlemail.com"},
]
maintainers = [
  {name = "Brutus", email = "brutus.dmc@googlemail.com"},
]
classifiers = [
	"License :: OSI Approved :: GNU General Public License (GPL)",
	"Operating System :: OS Independent",
	"Programming Language :: Python",
	"Development Status :: 4 - Beta",
	"Environment :: Web Environment",
	"Intended Audience :: Developers",
	"Topic :: Internet :: WWW/HTTP",
]
requires-python = ">=3.9"
version = "0.6.1"
dependencies = [
	"wtforms",
]

[project.urls]
Source = "https://github.com/brutus/wtforms-html5"
Documentation = "https://github.com/brutus/wtforms-html5/README.md"
Issues = "https://github.com/brutus/wtforms-html5/issues/"

# LINTING

[tool.hatch.envs.lint]
detached = true
dependencies = [
	"pre-commit",
	"pyupgrade",
	"ruff",
]

[tool.hatch.envs.lint.scripts]
pc = "pre-commit run --all-files {args}"
check = [
	"ruff check --no-fix {args:.}",
	"ruff check --fix-only --diff {args:.}",
	"ruff format --check --diff {args:.}",
]
fix = [
	"ruff check --fix {args:.}",
	"ruff format {args:.}",
]
upgrade = "git ls-files -- '*.py' | xargs -r pyupgrade --py39-plus"

[tool.ruff]
src = ['.', 'src', 'tests']

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.ruff.lint.isort]
known-first-party = ["wtforms_html5"]
force-single-line = true

# TESTING

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.13", "3.12", "3.11", "3.10", "3.9"]

[tool.hatch.envs.hatch-test]
extra-dependencies = [
	"beautifulsoup4",
	"werkzeug",
	"xdoctest[colors]",
]

[tool.pytest.ini_options]
addopts = "-ra --strict-markers --import-mode=importlib"
testpaths = [
	"tests",
]

[tool.coverage.run]
branch = true
parallel = true
source_pkgs = ["wtforms_html5"]
omit = [
	"src/wtforms_html5/__about__.py",
]

[tool.coverage.paths]
wtforms_html5 = ["src/wtforms_html5"]
tests = ["tests", "*/wtforms_html5/tests"]

[tool.coverage.report]
fail_under = 80
precision = 2
skip_covered = true
skip_empty = true
show_missing = true
exclude_lines = [
	"no cov",
	"if __name__ == .__main__.:",
	"if TYPE_CHECKING:",
]

# PROJECT MANAGEMENT

[tool.hatch.envs.project]
detached = true
dependencies = [
	"bumpver",
	"towncrier",
]

[tool.bumpver]
current_version = "0.6.1"
version_pattern = "MAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "chore: bump version `{old_version}` -> `{new_version}`"
tag_message = "v{new_version}"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = [
	'^version = "{version}"',
	'^current_version = "{version}"',
]
"src/wtforms_html5/__init__.py" = [
	'__version__ = "{version}"',
]
"tests/conftest.py" = [
	'EXP_VERSION = "{version}"',
]
"README.md" = [
	'**VERSION**: `{version}`',
]

[tool.towncrier]
directory = "changes"
filename = "CHANGELOG.md"
title_format = "## {version} ({project_date})"
issue_format = "[#{issue}](https://github.com/brutus/wtforms-html5/issues/{issue})"
wrap = true

[[tool.towncrier.type]]
directory = "rm"
name = "Removals"
showcontent = true

[[tool.towncrier.type]]
directory = "fix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "feat"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "change"
name = "Changes"
showcontent = true
